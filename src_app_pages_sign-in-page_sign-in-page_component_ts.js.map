{"version":3,"file":"src_app_pages_sign-in-page_sign-in-page_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAC6C;AAC+B;AAER;AAChB;AACG;AACE;;;;;;;;;;;ICDrDO,uDAAAA,mBAEY;;;;IADDA,wDAAAA,cAAAA,yDAAAA,kCAAAA,4DAAAA,CAAkD;;;;;IAE7DA,4DAAAA,gBAAyD;IACvDA,oDAAAA,GACF;;IAAAA,0DAAAA,EAAY;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,MAAAA,yDAAAA,mCACF;;;;;IAOAA,uDAAAA,mBAEY;;;;IADDA,wDAAAA,cAAAA,yDAAAA,qCAAAA,4DAAAA,CAAqD;;;ADI9D,MAAOC,mBAAmB;EAO9BC,YAAoBC,EAAe,EACfC,KAAY;IADZ,OAAE,GAAFD,EAAE;IACF,UAAK,GAALC,KAAK;IANzB,SAAI,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACnBC,KAAK,EAAE,CAAC,EAAE,EAAEX,8DAAkB,CAAC,CAACA,+DAAmB,EAAEA,4DAAgB,CAAC,CAAC,CAAC;MACxEc,QAAQ,EAAE,CAAC,EAAE,EAAEd,8DAAkB,CAAC,CAACA,+DAAmB,CAAC,CAAC;KACzD,CAAC;EAIF;EAGAe,QAAQ,IACR;EAEAC,QAAQ;IACN,MAAML,KAAK,GAAG,IAAI,CAACM,IAAI,CAACC,KAAK,CAACP,KAAe;IAC7C,MAAMG,QAAQ,GAAG,IAAI,CAACG,IAAI,CAACC,KAAK,CAACJ,QAAkB;IACnD,IAAI,CAACL,KAAK,CAACU,QAAQ,CAAC,IAAIlB,2EAAgB,CAACU,KAAK,EAAEG,QAAQ,CAAC,CAAC;EAC5D;;AAnBWR,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAc;EAAAC;EAAAC,WAAAA,iEAAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCvBhCrB,4DAAAA,cAAiD;MAA3CA,wDAAAA;QAAA,OAAYsB,cAAU;MAAA,EAAC;MAE3BtB,4DAAAA,qBAAgB;MACHA,oDAAAA,GAAqC;;MAAAA,0DAAAA,EAAY;MAC5DA,uDAAAA,eAAsD;MAEtDA,wDAAAA,mEAEY;MACZA,wDAAAA,mEAEY;MACdA,0DAAAA,EAAiB;MAEjBA,4DAAAA,qBAAgB;MACHA,oDAAAA,IAAwC;;MAAAA,0DAAAA,EAAY;MAC/DA,uDAAAA,gBAA4D;MAE5DA,wDAAAA,qEAEY;MACdA,0DAAAA,EAAiB;MAEjBA,4DAAAA,iBAAiF;MAC/EA,oDAAAA,IACF;;MAAAA,0DAAAA,EAAS;MACTA,4DAAAA,YAA6B;MAC3BA,oDAAAA,IACF;;MAAAA,0DAAAA,EAAI;;;MA5BwBA,wDAAAA,uBAAkB;MAGjCA,uDAAAA,GAAqC;MAArCA,+DAAAA,CAAAA,yDAAAA,8BAAqC;MAGpCA,uDAAAA,GAA8C;MAA9CA,wDAAAA,sDAA8C;MAG9CA,uDAAAA,GAA2C;MAA3CA,wDAAAA,mDAA2C;MAM5CA,uDAAAA,GAAwC;MAAxCA,+DAAAA,CAAAA,yDAAAA,mCAAwC;MAGvCA,uDAAAA,GAAiD;MAAjDA,wDAAAA,yDAAiD;MAKvDA,uDAAAA,GAAwB;MAAxBA,wDAAAA,6BAAwB;MAC9BA,uDAAAA,GACF;MADEA,gEAAAA,MAAAA,yDAAAA,qCACF;MAEEA,uDAAAA,GACF;MADEA,gEAAAA,MAAAA,yDAAAA,sCACF;;;iBDfEP,yDAAY,qDACZK,mEAAc,iRACdJ,+DAAmB,8XACnBK,qEAAe,oIACfF,gEAAe;EAAA0B;EAAAC;AAAA","sources":["./src/app/pages/sign-in-page/sign-in-page.component.ts","./src/app/pages/sign-in-page/sign-in-page.component.html"],"sourcesContent":["import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormBuilder, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {Store} from '@ngxs/store';\nimport {AuthSignInAction} from '../../state/auth/auth.state-models';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\n\n@Component({\n  selector: 'pfc-sign-in-page',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    TranslateModule,\n  ],\n  templateUrl: './sign-in-page.component.html',\n  styleUrls: ['./sign-in-page.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SignInPageComponent implements OnInit {\n\n  form = this.fb.group({\n    email: ['', Validators.compose([Validators.required, Validators.email])],\n    password: ['', Validators.compose([Validators.required])],\n  });\n\n  constructor(private fb: FormBuilder,\n              private store: Store) {\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    const email = this.form.value.email as string;\n    const password = this.form.value.password as string;\n    this.store.dispatch(new AuthSignInAction(email, password));\n  }\n}\n","<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\">\n\n  <mat-form-field>\n    <mat-label>{{'sign-in.email.label' | translate}}</mat-label>\n    <input formControlName=\"email\" matInput type=\"email\"/>\n\n    <mat-error *ngIf=\"form.controls.email.hasError('required')\"\n               [innerHTML]=\"'sign-in.email.required' | translate\">\n    </mat-error>\n    <mat-error *ngIf=\"form.controls.email.hasError('email')\">\n      {{'sign-in.email.email' | translate}}\n    </mat-error>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>{{'sign-in.password.label' | translate}}</mat-label>\n    <input formControlName=\"password\" matInput type=\"password\"/>\n\n    <mat-error *ngIf=\"form.controls.password.hasError('required')\"\n               [innerHTML]=\"'sign-in.password.required' | translate\">\n    </mat-error>\n  </mat-form-field>\n\n  <button [disabled]=\"!form.valid\" color=\"primary\" mat-raised-button type=\"submit\">\n    {{'sign-in.sign-in-btn' | translate}}\n  </button>\n  <a href=\"/signup\" mat-button>\n    {{'sign-in.sign-up-link' | translate}}\n  </a>\n</form>\n"],"names":["CommonModule","ReactiveFormsModule","Validators","AuthSignInAction","TranslateModule","MatInputModule","MatButtonModule","i0","SignInPageComponent","constructor","fb","store","group","email","compose","required","password","ngOnInit","onSubmit","form","value","dispatch","selectors","standalone","features","decls","vars","consts","template","ctx","styles","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}