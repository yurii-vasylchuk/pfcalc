{"version":3,"file":"default-src_app_components_add-food_add-food_component_ts-node_modules_rxjs_dist_esm_internal-96d9f9.js","mappings":"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","sources":["./src/app/components/add-food/add-food.component.ts","./src/app/components/add-food/add-food.component.html","./node_modules/rxjs/dist/esm/internal/operators/combineLatest.js","./node_modules/rxjs/dist/esm/internal/operators/combineLatestWith.js","./node_modules/rxjs/dist/esm/internal/operators/distinct.js","./node_modules/rxjs/dist/esm/internal/util/argsOrArgArray.js","./node_modules/@angular/cdk/fesm2020/dialog.mjs","./node_modules/@angular/material/fesm2020/dialog.mjs"],"sourcesContent":["import {ChangeDetectionStrategy, Component, Inject, OnDestroy, TrackByFunction} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {MatSlideToggleChange, MatSlideToggleModule} from \"@angular/material/slide-toggle\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {Store} from \"@ngxs/store\";\nimport {BehaviorSubject, distinct, filter, map, Observable, Subject, takeUntil} from \"rxjs\";\nimport {FoodType, IFood, IIngredient} from \"../../commons/models/domain.models\";\nimport {DomainState} from \"../../state/domain/domain.state\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {FormArray, FormBuilder, FormControl, FormGroup, ReactiveFormsModule, Validators} from \"@angular/forms\";\nimport {ceilPfcc, multiplyPfcc, pfccFormGroupIsNotEmpty, sumPfccs} from \"../../commons/functions\";\nimport {AddFoodFormState} from \"../../state/form/add-food-form.state\";\nimport {\n  AddFoodFormResetAction,\n  AddFoodFormStatusChangedEvent,\n  AddFoodFormValueChangedEvent,\n  IAddFoodFormModel\n} from \"../../state/form/add-food-form.state-models\";\nimport {emptyPfcc, IPfcc} from \"../../commons/models/common.models\";\n\n@Component({\n  selector: 'pfc-add-food',\n  standalone: true,\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatFormFieldModule, TranslateModule, MatSlideToggleModule, MatInputModule, MatSelectModule, ReactiveFormsModule],\n  templateUrl: './add-food.component.html',\n  styleUrls: ['./add-food.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddFoodComponent implements OnDestroy {\n  protected allIngredients$: Observable<IFood[]>;\n  protected formGroup: FormGroup;\n\n  protected ceiledPfcc = new BehaviorSubject<IPfcc>(emptyPfcc);\n  protected usedIngredientsIds$ = new BehaviorSubject<number[]>([]);\n  protected nextIngredientIndex = 0;\n  protected trackIngredientByIndexFn: TrackByFunction<{\n    ingredient: IFood;\n    ingredientWeight: number,\n    index: number\n  }> = (idx, i) => `${i.index}`;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private store: Store,\n              private dialogRef: MatDialogRef<AddFoodComponent, IAddFoodFormModel>,\n              @Inject(MAT_DIALOG_DATA) data: AddFoodModalData,\n              private fb: FormBuilder) {\n    this.store.dispatch(new AddFoodFormResetAction());\n    this.allIngredients$ = this.store.select(DomainState.foods);\n\n    const usedIngredients$ = this.store.select(AddFoodFormState.ingredients)\n      .pipe(\n        takeUntil(this.destroy$),\n        filter(ingredients => ingredients != null),\n        distinct(),\n        map(ingredients => ingredients!.filter(i => i.ingredient != null)),\n      );\n\n    usedIngredients$\n      .pipe(\n        map(ingredients => ingredients != null ? ingredients.map(i => multiplyPfcc(i.ingredient.pfcc, i.weight / 100)) : []),\n        map(pfccs => ceilPfcc(sumPfccs(emptyPfcc, ...pfccs)))\n      )\n      .subscribe(pfcc => this.ceiledPfcc.next(pfcc));\n\n    usedIngredients$.pipe(\n      map(ingredients => ingredients!\n        .map(i => i.ingredient.id)),\n    ).subscribe(usedIngredientsIds => this.usedIngredientsIds$.next(usedIngredientsIds));\n\n    usedIngredients$.subscribe(ingredients => {\n      const mapped = ingredients!.map(i => {\n        return {\n          ...i.ingredient,\n          ingredientWeight: i.weight\n        } as IIngredient;\n      });\n      this.recalculatePfcc(mapped);\n    });\n\n    this.formGroup = fb.group({\n      name: [data.name || null, Validators.compose([Validators.required])],\n      description: [null],\n      isRecipe: [data?.type === 'recipe', Validators.required],\n      isHidden: [false, Validators.required],\n      pfcc: fb.group({\n        protein: [0, Validators.compose([Validators.required, Validators.min(0)])],\n        fat: [0, Validators.compose([Validators.required, Validators.min(0)])],\n        carbohydrates: [0, Validators.compose([Validators.required, Validators.min(0)])],\n        calories: [0, Validators.compose([Validators.required, Validators.min(0)])],\n      }, {\n        validators: pfccFormGroupIsNotEmpty\n      }),\n      ingredients: fb.array([])\n    });\n\n    this.formGroup.valueChanges.subscribe(formData => this.store.dispatch(new AddFoodFormValueChangedEvent(formData)));\n    this.formGroup.statusChanges.subscribe(status => {\n      this.store.dispatch(new AddFoodFormStatusChangedEvent(status, this.formGroup.errors))\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected get ingredientsFormArray(): FormArray {\n    return this.formGroup.get('ingredients') as FormArray;\n  }\n\n  protected get pfccFormGroup(): FormGroup {\n    return this.formGroup.get('pfcc') as FormGroup;\n  }\n\n  protected handleCloseClicked(): void {\n    this.dialogRef.close();\n  }\n\n  protected handleAddIngredientClick(): void {\n    this.ingredientsFormArray.push(this.createIngredientFormGroup());\n  }\n\n  private createIngredientFormGroup(): FormGroup {\n    return this.fb.group({\n      ingredient: [null, Validators.required],\n      weight: [100, Validators.compose([Validators.required, Validators.min(1)])],\n      index: [this.nextIngredientIndex++, Validators.required]\n    });\n  }\n\n  handleSubmit(): void {\n    this.dialogRef.close(this.store.selectSnapshot(AddFoodFormState.model));\n  }\n\n  handleRecipeSwitcherChanged(data: MatSlideToggleChange): void {\n    if (data.checked) {\n      this.pfccFormGroup.setValue(emptyPfcc);\n    } else {\n      this.ingredientsFormArray.clear();\n    }\n  }\n\n  protected get isRecipe(): boolean {\n    return (this.formGroup.get('isRecipe') as FormControl).value;\n  }\n\n  private recalculatePfcc(ingredients: IIngredient[]) {\n    const ingredientsPfccs = ingredients.filter(i => i != null && i.pfcc != null && i.ingredientWeight != null)\n      .map(i => multiplyPfcc(i.pfcc, (i.ingredientWeight * 0.01)));\n\n    const accumulatedPfcc = sumPfccs(emptyPfcc, ...ingredientsPfccs);\n\n    this.pfccFormGroup.setValue(accumulatedPfcc);\n  }\n\n  handleRemoveIngredientClick(idx: number) {\n    this.ingredientsFormArray.removeAt(idx);\n  }\n}\n\nexport interface AddFoodModalData {\n  name?: string;\n  type?: FoodType\n}\n","<div class=\"heading\">\n  <h1 class=\"heading__title\">{{'add-food.title' | translate}}</h1>\n\n  <div class=\"flex-spacer\"></div>\n\n  <button class=\"heading__close\"\n          mat-icon-button\n          (click)=\"handleCloseClicked()\">\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n\n\n<div class=\"content\">\n  <form [formGroup]=\"formGroup\"\n        (ngSubmit)=\"handleSubmit()\">\n    <mat-form-field class=\"content__name\">\n      <mat-label>{{'add-food.name-input-label' | translate}}</mat-label>\n      <input type=\"text\"\n             matInput\n             [placeholder]=\"'add-food.name-input-placeholder' | translate\"\n             formControlName=\"name\">\n    </mat-form-field>\n\n    <mat-form-field class=\"content__description\">\n      <mat-label>{{'add-food.description-input-label' | translate}}</mat-label>\n      <textarea type=\"text\"\n                matInput\n                [placeholder]=\"'add-food.description-input-placeholder' | translate\"\n                formControlName=\"description\"></textarea>\n    </mat-form-field>\n\n    <mat-slide-toggle #recipeSwitcher\n                      (change)=\"handleRecipeSwitcherChanged($event)\"\n                      class=\"content__recipe-switcher\"\n                      formControlName=\"isRecipe\">\n      {{'add-food.recipe-switcher-label' | translate}}\n    </mat-slide-toggle>\n\n    <mat-slide-toggle class=\"content__hidden-switcher\"\n                      formControlName=\"isHidden\">\n      {{'add-food.hidden-switcher-label' | translate}}\n    </mat-slide-toggle>\n\n    <div class=\"content__pfcc-container\"\n         formGroupName=\"pfcc\"\n         *ngIf=\"!isRecipe\">\n      <mat-form-field>\n        <mat-label>{{'add-food.protein-input-label' | translate}}</mat-label>\n        <input matInput\n               type=\"number\"\n               formControlName=\"protein\"\n               [readonly]=\"recipeSwitcher.checked\"\n               [placeholder]=\"'add-food.protein-input-placeholder' | translate\">\n\n        <span matSuffix>{{'common.gram-sign' | translate}} &nbsp;</span>\n        <mat-hint>{{'add-food.pfcc-inputs-hint' | translate}}</mat-hint>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>{{'add-food.fat-input-label' | translate}}</mat-label>\n\n        <input matInput\n               type=\"number\"\n               formControlName=\"fat\"\n               [readonly]=\"recipeSwitcher.checked\"\n               [placeholder]=\"'add-food.fat-input-placeholder' | translate\">\n\n        <span matSuffix>{{'common.gram-sign' | translate}} &nbsp;</span>\n        <mat-hint>{{'add-food.pfcc-inputs-hint' | translate}}</mat-hint>\n      </mat-form-field>\n\n\n      <mat-form-field>\n        <mat-label>{{'add-food.carbohydrates-input-label' | translate}}</mat-label>\n        <input matInput\n               type=\"number\"\n               formControlName=\"carbohydrates\"\n               [readonly]=\"recipeSwitcher.checked\"\n               [placeholder]=\"'add-food.carbohydrates-input-placeholder' | translate\">\n\n        <span matSuffix>{{'common.gram-sign' | translate}} &nbsp;</span>\n        <mat-hint>{{'add-food.pfcc-inputs-hint' | translate}}</mat-hint>\n      </mat-form-field>\n\n\n      <mat-form-field>\n        <mat-label>{{'add-food.calories-input-label' | translate}}</mat-label>\n        <input matInput\n               type=\"number\"\n               formControlName=\"calories\"\n               [readonly]=\"recipeSwitcher.checked\"\n               [placeholder]=\"'add-food.calories-input-placeholder' | translate\">\n\n        <span matSuffix>{{'common.calories-sign' | translate}} &nbsp;</span>\n        <mat-hint>{{'add-food.pfcc-inputs-hint' | translate}}</mat-hint>\n      </mat-form-field>\n    </div>\n\n    <ng-container *ngIf=\"isRecipe\">\n      <div class=\"content__pfcc-values pfcc-values\">\n        <p class=\"pfcc-values__label\">{{'common.protein' | translate}} :</p>\n        <p class=\"pfcc-values__value\">{{(ceiledPfcc | async)!.protein}}</p>\n\n        <p class=\"pfcc-values__label\">{{'common.fat' | translate}} :</p>\n        <p class=\"pfcc-values__value\">{{(ceiledPfcc | async)!.fat}}</p>\n\n        <p class=\"pfcc-values__label\">{{'common.carbohydrates' | translate}} :</p>\n        <p class=\"pfcc-values__value\">{{(ceiledPfcc | async)!.carbohydrates}}</p>\n\n        <p class=\"pfcc-values__label\">{{'common.calories' | translate}} :</p>\n        <p class=\"pfcc-values__value\">{{(ceiledPfcc | async)!.calories}}</p>\n      </div>\n\n      <div class=\"content__ingredients\"\n           formArrayName=\"ingredients\">\n        <div class=\"content__ingredient\"\n             *ngFor=\"let formIngredient of ingredientsFormArray.value; index as idx; trackBy: trackIngredientByIndexFn\"\n             [formGroupName]=\"idx\">\n          <mat-form-field class=\"content__ingredient-select\">\n            <mat-label>{{'add-food.ingredient-select-label' | translate}}</mat-label>\n            <mat-select [placeholder]=\"'add-food.ingredient-select-placeholder' | translate\"\n                        formControlName=\"ingredient\">\n              <mat-option *ngFor=\"let ingredient of allIngredients$ | async\"\n                          [value]=\"ingredient\"\n                          [disabled]=\"(usedIngredientsIds$ | async)!.includes(ingredient.id)\">\n                {{ingredient.name}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <mat-form-field class=\"content__ingredient-weight\">\n            <mat-label>{{'add-food.ingredient-weight-label' | translate}}</mat-label>\n            <input matInput\n                   formControlName=\"weight\"\n                   type=\"number\">\n            <span matTextSuffix>{{'common.gram-sign' | translate}}</span>\n          </mat-form-field>\n\n          <button mat-icon-button\n                  class=\"content__remove-ingredient-btn\"\n                  color=\"warn\"\n                  type=\"button\"\n          (click)=\"handleRemoveIngredientClick(idx)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </div>\n\n        <button mat-stroked-button\n                class=\"content__add-ingredient-btn\"\n                color=\"primary\"\n                type=\"button\"\n                (click)=\"handleAddIngredientClick()\">\n          {{'add-food.add-ingredient-btn' | translate}}\n        </button>\n\n      </div>\n\n    </ng-container>\n\n    <div class=\"content__actions\">\n      <button type=\"submit\"\n              mat-raised-button\n              color=\"accent\"\n              [disabled]=\"formGroup.invalid\">\n        {{'add-food.submit-btn-caption' | translate}}\n      </button>\n    </div>\n  </form>\n</div>\n","import { combineLatestInit } from '../observable/combineLatest';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\nexport function combineLatest(...args) {\n    const resultSelector = popResultSelector(args);\n    return resultSelector\n        ? pipe(combineLatest(...args), mapOneOrManyArgs(resultSelector))\n        : operate((source, subscriber) => {\n            combineLatestInit([source, ...argsOrArgArray(args)])(subscriber);\n        });\n}\n","import { combineLatest } from './combineLatest';\nexport function combineLatestWith(...otherSources) {\n    return combineLatest(...otherSources);\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function distinct(keySelector, flushes) {\n    return operate((source, subscriber) => {\n        const distinctKeys = new Set();\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const key = keySelector ? keySelector(value) : value;\n            if (!distinctKeys.has(key)) {\n                distinctKeys.add(key);\n                subscriber.next(value);\n            }\n        }));\n        flushes === null || flushes === void 0 ? void 0 : flushes.subscribe(createOperatorSubscriber(subscriber, () => distinctKeys.clear(), noop));\n    });\n}\n","const { isArray } = Array;\nexport function argsOrArgArray(args) {\n    return args.length === 1 && isArray(args[0]) ? args[0] : args;\n}\n","import * as i1 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, NgModule } from '@angular/core';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, defer, of } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { startWith } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Configuration for opening a modal dialog. */\nclass DialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Optional CSS class or classes applied to the overlay panel. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Optional CSS class or classes applied to the overlay backdrop. */\n        this.backdropClass = '';\n        /** Whether the dialog closes with the escape key or pointer events outside the panel element. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Dialog label applied via `aria-label` */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the previously-focused element upon closing.\n         * Has the following behavior based on the type that is passed in:\n         * - `boolean` - when true, will return focus to the element that was focused before the dialog\n         *    was opened, otherwise won't restore focus at all.\n         * - `string` - focus will be restored to the first element that matches the CSS selector.\n         * - `HTMLElement` - focus will be restored to the specific element.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user navigates backwards or forwards through browser\n         * history. This does not apply to navigation via anchor element unless using URL-hash based\n         * routing (`HashLocationStrategy` in the Angular router).\n         */\n        this.closeOnNavigation = true;\n        /**\n         * Whether the dialog should close when the dialog service is destroyed. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead.\n         */\n        this.closeOnDestroy = true;\n        /**\n         * Whether the dialog should close when the underlying overlay is detached. This is useful if\n         * another service is wrapping the dialog and is managing the destruction instead. E.g. an\n         * external detachment can happen as a result of a scroll strategy triggering it or when the\n         * browser location changes.\n         */\n        this.closeOnOverlayDetachments = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction throwDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * @docs-private\n */\nclass CdkDialogContainer extends BasePortalOutlet {\n    constructor(_elementRef, _focusTrapFactory, _document, _config, _interactivityChecker, _ngZone, _overlayRef, _focusMonitor) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._config = _config;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this._overlayRef = _overlayRef;\n        this._focusMonitor = _focusMonitor;\n        /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * Type of interaction that led to the dialog being closed. This is used to determine\n         * whether the focus style will be applied when returning focus to its original location\n         * after the dialog is closed.\n         */\n        this._closeInteractionType = null;\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwDialogContentAlreadyAttachedError();\n            }\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._contentAttached();\n            return result;\n        };\n        this._ariaLabelledBy = this._config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    _contentAttached() {\n        this._initializeFocusTrap();\n        this._handleBackdropClicks();\n        this._captureInitialFocus();\n    }\n    /**\n     * Can be used by child classes to customize the initial focus\n     * capturing behavior (e.g. if it's tied to an animation).\n     */\n    _captureInitialFocus() {\n        this._trapFocus();\n    }\n    ngOnDestroy() {\n        this._restoreFocus();\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @param portal Portal to be attached as the dialog content.\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwDialogContentAlreadyAttachedError();\n        }\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._contentAttached();\n        return result;\n    }\n    // TODO(crisbeto): this shouldn't be exposed, but there are internal references to it.\n    /** Captures focus if it isn't already inside the dialog. */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'dialog', if focus\n     * cannot be moved then focus will go to the dialog container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        // If were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty when setting focus when autoFocus isn't set to\n        // dialog. If the element inside the dialog can't be focused, then the container is focused\n        // so the user can't tab into other elements behind it.\n        switch (this._config.autoFocus) {\n            case false:\n            case 'dialog':\n                // Ensure that focus is on the dialog container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the dialog already, because it's possible that the consumer\n                // turned off `autoFocus` in order to move focus themselves.\n                if (!this._containsFocus()) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady().then(focusedSuccessfully => {\n                    // If we weren't able to find a focusable element in the dialog, then focus the dialog\n                    // container instead.\n                    if (!focusedSuccessfully) {\n                        this._focusDialogContainer();\n                    }\n                });\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this._config.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the dialog opened. */\n    _restoreFocus() {\n        const focusConfig = this._config.restoreFocus;\n        let focusTargetElement = null;\n        if (typeof focusConfig === 'string') {\n            focusTargetElement = this._document.querySelector(focusConfig);\n        }\n        else if (typeof focusConfig === 'boolean') {\n            focusTargetElement = focusConfig ? this._elementFocusedBeforeDialogWasOpened : null;\n        }\n        else if (focusConfig) {\n            focusTargetElement = focusConfig;\n        }\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus &&\n            focusTargetElement &&\n            typeof focusTargetElement.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                if (this._focusMonitor) {\n                    this._focusMonitor.focusVia(focusTargetElement, this._closeInteractionType);\n                    this._closeInteractionType = null;\n                }\n                else {\n                    focusTargetElement.focus();\n                }\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Focuses the dialog container. */\n    _focusDialogContainer() {\n        // Note that there is no focus method when rendering on the server.\n        if (this._elementRef.nativeElement.focus) {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /** Returns whether focus is inside the dialog. */\n    _containsFocus() {\n        const element = this._elementRef.nativeElement;\n        const activeElement = _getFocusedElementPierceShadowDom();\n        return element === activeElement || element.contains(activeElement);\n    }\n    /** Sets up the focus trap. */\n    _initializeFocusTrap() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        // Save the previously focused element. This element will be re-focused\n        // when the dialog closes.\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = _getFocusedElementPierceShadowDom();\n        }\n    }\n    /** Sets up the listener that handles clicks on the dialog backdrop. */\n    _handleBackdropClicks() {\n        // Clicking on the backdrop will move focus out of dialog.\n        // Recapture it if closing via the backdrop is disabled.\n        this._overlayRef.backdropClick().subscribe(() => {\n            if (this._config.disableClose) {\n                this._recaptureFocus();\n            }\n        });\n    }\n}\nCdkDialogContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: DialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });\nCdkDialogContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkDialogContainer, selector: \"cdk-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.id\": \"_config.id || null\", \"attr.role\": \"_config.role\", \"attr.aria-modal\": \"_config.ariaModal\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledBy\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\" }, classAttribute: \"cdk-dialog-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"], dependencies: [{ kind: \"directive\", type: i3.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'cdk-dialog-container',\n                        'tabindex': '-1',\n                        '[attr.id]': '_config.id || null',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\n\", styles: [\".cdk-dialog-container{display:block;width:100%;height:100%;min-height:inherit;max-height:inherit}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DialogConfig]\n                }] }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: i1.FocusMonitor }]; }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a dialog opened via the Dialog service.\n */\nclass DialogRef {\n    constructor(overlayRef, config) {\n        this.overlayRef = overlayRef;\n        this.config = config;\n        /** Emits when the dialog has been closed. */\n        this.closed = new Subject();\n        this.disableClose = config.disableClose;\n        this.backdropClick = overlayRef.backdropClick();\n        this.keydownEvents = overlayRef.keydownEvents();\n        this.outsidePointerEvents = overlayRef.outsidePointerEvents();\n        this.id = config.id; // By the time the dialog is created we are guaranteed to have an ID.\n        this.keydownEvents.subscribe(event => {\n            if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n                event.preventDefault();\n                this.close(undefined, { focusOrigin: 'keyboard' });\n            }\n        });\n        this.backdropClick.subscribe(() => {\n            if (!this.disableClose) {\n                this.close(undefined, { focusOrigin: 'mouse' });\n            }\n        });\n        this._detachSubscription = overlayRef.detachments().subscribe(() => {\n            // Check specifically for `false`, because we want `undefined` to be treated like `true`.\n            if (config.closeOnOverlayDetachments !== false) {\n                this.close();\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param result Optional result to return to the dialog opener.\n     * @param options Additional options to customize the closing behavior.\n     */\n    close(result, options) {\n        if (this.containerInstance) {\n            const closedSubject = this.closed;\n            this.containerInstance._closeInteractionType = options?.focusOrigin || 'program';\n            // Drop the detach subscription first since it can be triggered by the\n            // `dispose` call and override the result of this closing sequence.\n            this._detachSubscription.unsubscribe();\n            this.overlayRef.dispose();\n            closedSubject.next(result);\n            closedSubject.complete();\n            this.componentInstance = this.containerInstance = null;\n        }\n    }\n    /** Updates the position of the dialog based on the current position strategy. */\n    updatePosition() {\n        this.overlayRef.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this.overlayRef.updateSize({ width, height });\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this.overlayRef.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this.overlayRef.removePanelClass(classes);\n        return this;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the Dialog's ScrollStrategy. */\nconst DIALOG_SCROLL_STRATEGY = new InjectionToken('DialogScrollStrategy');\n/** Injection token for the Dialog's Data. */\nconst DIALOG_DATA = new InjectionToken('DialogData');\n/** Injection token that can be used to provide default options for the dialog module. */\nconst DEFAULT_DIALOG_CONFIG = new InjectionToken('DefaultDialogConfig');\n/** @docs-private */\nfunction DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Unique id for the created dialog. */\nlet uniqueId = 0;\nclass Dialog {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    constructor(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n    }\n    open(componentOrTemplateRef, config) {\n        const defaults = (this._defaultOptions || new DialogConfig());\n        config = { ...defaults, ...config };\n        config.id = config.id || `cdk-dialog-${uniqueId++}`;\n        if (config.id &&\n            this.getDialogById(config.id) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        const overlayConfig = this._getOverlayConfig(config);\n        const overlayRef = this._overlay.create(overlayConfig);\n        const dialogRef = new DialogRef(overlayRef, config);\n        const dialogContainer = this._attachContainer(overlayRef, dialogRef, config);\n        dialogRef.containerInstance = dialogContainer;\n        this._attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.closed.subscribe(() => this._removeOpenDialog(dialogRef, true));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        reverseForEach(this.openDialogs, dialog => dialog.close());\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Make one pass over all the dialogs that need to be untracked, but should not be closed. We\n        // want to stop tracking the open dialog even if it hasn't been closed, because the tracking\n        // determines when `aria-hidden` is removed from elements outside the dialog.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => {\n            // Check for `false` specifically since we want `undefined` to be interpreted as `true`.\n            if (dialog.config.closeOnDestroy === false) {\n                this._removeOpenDialog(dialog, false);\n            }\n        });\n        // Make a second pass and close the remaining dialogs. We do this second pass in order to\n        // correctly dispatch the `afterAllClosed` event in case we have a mixed array of dialogs\n        // that should be closed and dialogs that should not.\n        reverseForEach(this._openDialogsAtThisLevel, dialog => dialog.close());\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n        this._openDialogsAtThisLevel = [];\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @param config The dialog configuration.\n     * @returns The overlay configuration.\n     */\n    _getOverlayConfig(config) {\n        const state = new OverlayConfig({\n            positionStrategy: config.positionStrategy ||\n                this._overlay.position().global().centerHorizontally().centerVertically(),\n            scrollStrategy: config.scrollStrategy || this._scrollStrategy(),\n            panelClass: config.panelClass,\n            hasBackdrop: config.hasBackdrop,\n            direction: config.direction,\n            minWidth: config.minWidth,\n            minHeight: config.minHeight,\n            maxWidth: config.maxWidth,\n            maxHeight: config.maxHeight,\n            width: config.width,\n            height: config.height,\n            disposeOnNavigation: config.closeOnNavigation,\n        });\n        if (config.backdropClass) {\n            state.backdropClass = config.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches a dialog container to a dialog's already-created overlay.\n     * @param overlay Reference to the dialog's underlying overlay.\n     * @param config The dialog configuration.\n     * @returns A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachContainer(overlay, dialogRef, config) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DialogConfig, useValue: config },\n            { provide: DialogRef, useValue: dialogRef },\n            { provide: OverlayRef, useValue: overlay },\n        ];\n        let containerType;\n        if (config.container) {\n            if (typeof config.container === 'function') {\n                containerType = config.container;\n            }\n            else {\n                containerType = config.container.type;\n                providers.push(...config.container.providers(config));\n            }\n        }\n        else {\n            containerType = CdkDialogContainer;\n        }\n        const containerPortal = new ComponentPortal(containerType, config.viewContainerRef, Injector.create({ parent: userInjector || this._injector, providers }), config.componentFactoryResolver);\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created dialog container.\n     * @param componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param config Configuration used to open the dialog.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogRef, dialogContainer, config) {\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, undefined);\n            let context = { $implicit: config.data, dialogRef };\n            if (config.templateContext) {\n                context = {\n                    ...context,\n                    ...(typeof config.templateContext === 'function'\n                        ? config.templateContext()\n                        : config.templateContext),\n                };\n            }\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, context, injector));\n        }\n        else {\n            const injector = this._createInjector(config, dialogRef, dialogContainer, this._injector);\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector, config.componentFactoryResolver));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the dialog.\n     * @param dialogRef Reference to the dialog being opened.\n     * @param dialogContainer Component that is going to wrap the dialog content.\n     * @param fallbackInjector Injector to use as a fallback when a lookup fails in the custom\n     * dialog injector, if the user didn't provide a custom one.\n     * @returns The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer, fallbackInjector) {\n        const userInjector = config.injector || config.viewContainerRef?.injector;\n        const providers = [\n            { provide: DIALOG_DATA, useValue: config.data },\n            { provide: DialogRef, useValue: dialogRef },\n        ];\n        if (config.providers) {\n            if (typeof config.providers === 'function') {\n                providers.push(...config.providers(dialogRef, config, dialogContainer));\n            }\n            else {\n                providers.push(...config.providers);\n            }\n        }\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, { optional: true }))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || fallbackInjector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @param dialogRef Dialog to be removed.\n     * @param emitEvent Whether to emit an event if this is the last dialog.\n     */\n    _removeOpenDialog(dialogRef, emitEvent) {\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                });\n                this._ariaHiddenElements.clear();\n                if (emitEvent) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        }\n    }\n    /** Hides all of the content that isn't an overlay from assistive technology. */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                const sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n}\nDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Dialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: DEFAULT_DIALOG_CONFIG, optional: true }, { token: Dialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: DIALOG_SCROLL_STRATEGY }], target: i0.ɵɵFactoryTarget.Injectable });\nDialog.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Dialog });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Dialog, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: DialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DEFAULT_DIALOG_CONFIG]\n                }] }, { type: Dialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DIALOG_SCROLL_STRATEGY]\n                }] }]; } });\n/**\n * Executes a callback against all elements in an array while iterating in reverse.\n * Useful if the array is being modified as it is being iterated.\n */\nfunction reverseForEach(items, callback) {\n    let i = items.length;\n    while (i--) {\n        callback(items[i]);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DialogModule {\n}\nDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DialogModule, declarations: [CdkDialogContainer], imports: [OverlayModule, PortalModule, A11yModule], exports: [\n        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n        // don't have to remember to import it or be faced with an unhelpful error.\n        PortalModule,\n        CdkDialogContainer] });\nDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DialogModule, providers: [Dialog, DIALOG_SCROLL_STRATEGY_PROVIDER], imports: [OverlayModule, PortalModule, A11yModule, \n        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n        // don't have to remember to import it or be faced with an unhelpful error.\n        PortalModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: DialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, A11yModule],\n                    exports: [\n                        // Re-export the PortalModule so that people extending the `CdkDialogContainer`\n                        // don't have to remember to import it or be faced with an unhelpful error.\n                        PortalModule,\n                        CdkDialogContainer,\n                    ],\n                    declarations: [CdkDialogContainer],\n                    providers: [Dialog, DIALOG_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkDialogContainer, DEFAULT_DIALOG_CONFIG, DIALOG_DATA, DIALOG_SCROLL_STRATEGY, DIALOG_SCROLL_STRATEGY_PROVIDER, DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, Dialog, DialogConfig, DialogModule, DialogRef, throwDialogContentAlreadyAttachedError };\n","import * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Optional, Inject, ViewEncapsulation, ChangeDetectionStrategy, InjectionToken, Injectable, ANIMATION_MODULE_TYPE as ANIMATION_MODULE_TYPE$1, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { CdkDialogContainer, Dialog, DialogConfig, DialogModule } from '@angular/cdk/dialog';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i4 from '@angular/cdk/portal';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { Subject, merge, defer } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { MatCommonModule } from '@angular/material/core';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nclass MatDialogConfig {\n    constructor() {\n        /** The ARIA role of the dialog element. */\n        this.role = 'dialog';\n        /** Custom class for the overlay pane. */\n        this.panelClass = '';\n        /** Whether the dialog has a backdrop. */\n        this.hasBackdrop = true;\n        /** Custom class for the backdrop. */\n        this.backdropClass = '';\n        /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n        this.disableClose = false;\n        /** Width of the dialog. */\n        this.width = '';\n        /** Height of the dialog. */\n        this.height = '';\n        /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n        this.maxWidth = '80vw';\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** ID of the element that describes the dialog. */\n        this.ariaDescribedBy = null;\n        /** ID of the element that labels the dialog. */\n        this.ariaLabelledBy = null;\n        /** Aria label to assign to the dialog element. */\n        this.ariaLabel = null;\n        /** Whether this is a modal dialog. Used to set the `aria-modal` attribute. */\n        this.ariaModal = true;\n        /**\n         * Where the dialog should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'first-tabbable';\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /** Whether to wait for the opening animation to finish before trapping focus. */\n        this.delayFocusTrap = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Class added when the dialog is open. */\nconst OPEN_CLASS = 'mdc-dialog--open';\n/** Class added while the dialog is opening. */\nconst OPENING_CLASS = 'mdc-dialog--opening';\n/** Class added while the dialog is closing. */\nconst CLOSING_CLASS = 'mdc-dialog--closing';\n/** Duration of the opening animation in milliseconds. */\nconst OPEN_ANIMATION_DURATION = 150;\n/** Duration of the closing animation in milliseconds. */\nconst CLOSE_ANIMATION_DURATION = 75;\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\n// tslint:disable-next-line:validate-decorators\nclass _MatDialogContainerBase extends CdkDialogContainer {\n    constructor(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, focusMonitor) {\n        super(elementRef, focusTrapFactory, _document, dialogConfig, interactivityChecker, ngZone, overlayRef, focusMonitor);\n        /** Emits when an animation state changes. */\n        this._animationStateChanged = new EventEmitter();\n    }\n    _captureInitialFocus() {\n        if (!this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n    }\n    /**\n     * Callback for when the open dialog animation has finished. Intended to\n     * be called by sub-classes that use different animation implementations.\n     */\n    _openAnimationDone(totalTime) {\n        if (this._config.delayFocusTrap) {\n            this._trapFocus();\n        }\n        this._animationStateChanged.next({ state: 'opened', totalTime });\n    }\n}\n_MatDialogContainerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatDialogContainerBase, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });\n_MatDialogContainerBase.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: _MatDialogContainerBase, selector: \"ng-component\", usesInheritance: true, ngImport: i0, template: '', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatDialogContainerBase, decorators: [{\n            type: Component,\n            args: [{ template: '' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: i1.FocusMonitor }]; } });\nconst TRANSITION_DURATION_PROPERTY = '--mat-dialog-transition-duration';\n// TODO(mmalerba): Remove this function after animation durations are required\n//  to be numbers.\n/**\n * Converts a CSS time string to a number in ms. If the given time is already a\n * number, it is assumed to be in ms.\n */\nfunction parseCssTime(time) {\n    if (time == null) {\n        return null;\n    }\n    if (typeof time === 'number') {\n        return time;\n    }\n    if (time.endsWith('ms')) {\n        return coerceNumberProperty(time.substring(0, time.length - 2));\n    }\n    if (time.endsWith('s')) {\n        return coerceNumberProperty(time.substring(0, time.length - 1)) * 1000;\n    }\n    if (time === '0') {\n        return 0;\n    }\n    return null; // anything else is invalid.\n}\n/**\n * Internal component that wraps user-provided dialog content in a MDC dialog.\n * @docs-private\n */\nclass MatDialogContainer extends _MatDialogContainerBase {\n    constructor(elementRef, focusTrapFactory, document, dialogConfig, checker, ngZone, overlayRef, _animationMode, focusMonitor) {\n        super(elementRef, focusTrapFactory, document, dialogConfig, checker, ngZone, overlayRef, focusMonitor);\n        this._animationMode = _animationMode;\n        /** Whether animations are enabled. */\n        this._animationsEnabled = this._animationMode !== 'NoopAnimations';\n        /** Host element of the dialog container component. */\n        this._hostElement = this._elementRef.nativeElement;\n        /** Duration of the dialog open animation. */\n        this._openAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.enterAnimationDuration) ?? OPEN_ANIMATION_DURATION\n            : 0;\n        /** Duration of the dialog close animation. */\n        this._closeAnimationDuration = this._animationsEnabled\n            ? parseCssTime(this._config.exitAnimationDuration) ?? CLOSE_ANIMATION_DURATION\n            : 0;\n        /** Current timer for dialog animations. */\n        this._animationTimer = null;\n        /**\n         * Completes the dialog open by clearing potential animation classes, trapping\n         * focus and emitting an opened event.\n         */\n        this._finishDialogOpen = () => {\n            this._clearAnimationClasses();\n            this._openAnimationDone(this._openAnimationDuration);\n        };\n        /**\n         * Completes the dialog close by clearing potential animation classes, restoring\n         * focus and emitting a closed event.\n         */\n        this._finishDialogClose = () => {\n            this._clearAnimationClasses();\n            this._animationStateChanged.emit({ state: 'closed', totalTime: this._closeAnimationDuration });\n        };\n    }\n    _contentAttached() {\n        // Delegate to the original dialog-container initialization (i.e. saving the\n        // previous element, setting up the focus trap and moving focus to the container).\n        super._contentAttached();\n        // Note: Usually we would be able to use the MDC dialog foundation here to handle\n        // the dialog animation for us, but there are a few reasons why we just leverage\n        // their styles and not use the runtime foundation code:\n        //   1. Foundation does not allow us to disable animations.\n        //   2. Foundation contains unnecessary features we don't need and aren't\n        //      tree-shakeable. e.g. background scrim, keyboard event handlers for ESC button.\n        //   3. Foundation uses unnecessary timers for animations to work around limitations\n        //      in React's `setState` mechanism.\n        //      https://github.com/material-components/material-components-web/pull/3682.\n        this._startOpenAnimation();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n    }\n    /** Starts the dialog open animation if enabled. */\n    _startOpenAnimation() {\n        this._animationStateChanged.emit({ state: 'opening', totalTime: this._openAnimationDuration });\n        if (this._animationsEnabled) {\n            // One would expect that the open class is added once the animation finished, but MDC\n            // uses the open class in combination with the opening class to start the animation.\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._openAnimationDuration}ms`);\n            this._hostElement.classList.add(OPENING_CLASS);\n            this._hostElement.classList.add(OPEN_CLASS);\n            this._waitForAnimationToComplete(this._openAnimationDuration, this._finishDialogOpen);\n        }\n        else {\n            this._hostElement.classList.add(OPEN_CLASS);\n            // Note: We could immediately finish the dialog opening here with noop animations,\n            // but we defer until next tick so that consumers can subscribe to `afterOpened`.\n            // Executing this immediately would mean that `afterOpened` emits synchronously\n            // on `dialog.open` before the consumer had a change to subscribe to `afterOpened`.\n            Promise.resolve().then(() => this._finishDialogOpen());\n        }\n    }\n    /**\n     * Starts the exit animation of the dialog if enabled. This method is\n     * called by the dialog ref.\n     */\n    _startExitAnimation() {\n        this._animationStateChanged.emit({ state: 'closing', totalTime: this._closeAnimationDuration });\n        this._hostElement.classList.remove(OPEN_CLASS);\n        if (this._animationsEnabled) {\n            this._hostElement.style.setProperty(TRANSITION_DURATION_PROPERTY, `${this._openAnimationDuration}ms`);\n            this._hostElement.classList.add(CLOSING_CLASS);\n            this._waitForAnimationToComplete(this._closeAnimationDuration, this._finishDialogClose);\n        }\n        else {\n            // This subscription to the `OverlayRef#backdropClick` observable in the `DialogRef` is\n            // set up before any user can subscribe to the backdrop click. The subscription triggers\n            // the dialog close and this method synchronously. If we'd synchronously emit the `CLOSED`\n            // animation state event if animations are disabled, the overlay would be disposed\n            // immediately and all other subscriptions to `DialogRef#backdropClick` would be silently\n            // skipped. We work around this by waiting with the dialog close until the next tick when\n            // all subscriptions have been fired as expected. This is not an ideal solution, but\n            // there doesn't seem to be any other good way. Alternatives that have been considered:\n            //   1. Deferring `DialogRef.close`. This could be a breaking change due to a new microtask.\n            //      Also this issue is specific to the MDC implementation where the dialog could\n            //      technically be closed synchronously. In the non-MDC one, Angular animations are used\n            //      and closing always takes at least a tick.\n            //   2. Ensuring that user subscriptions to `backdropClick`, `keydownEvents` in the dialog\n            //      ref are first. This would solve the issue, but has the risk of memory leaks and also\n            //      doesn't solve the case where consumers call `DialogRef.close` in their subscriptions.\n            // Based on the fact that this is specific to the MDC-based implementation of the dialog\n            // animations, the defer is applied here.\n            Promise.resolve().then(() => this._finishDialogClose());\n        }\n    }\n    /** Clears all dialog animation classes. */\n    _clearAnimationClasses() {\n        this._hostElement.classList.remove(OPENING_CLASS);\n        this._hostElement.classList.remove(CLOSING_CLASS);\n    }\n    _waitForAnimationToComplete(duration, callback) {\n        if (this._animationTimer !== null) {\n            clearTimeout(this._animationTimer);\n        }\n        // Note that we want this timer to run inside the NgZone, because we want\n        // the related events like `afterClosed` to be inside the zone as well.\n        this._animationTimer = setTimeout(callback, duration);\n    }\n}\nMatDialogContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogContainer, deps: [{ token: i0.ElementRef }, { token: i1.FocusTrapFactory }, { token: DOCUMENT, optional: true }, { token: MatDialogConfig }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i1$1.OverlayRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: i1.FocusMonitor }], target: i0.ɵɵFactoryTarget.Component });\nMatDialogContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatDialogContainer, selector: \"mat-dialog-container\", host: { attributes: { \"tabindex\": \"-1\" }, properties: { \"attr.aria-modal\": \"_config.ariaModal\", \"id\": \"_config.id\", \"attr.role\": \"_config.role\", \"attr.aria-labelledby\": \"_config.ariaLabel ? null : _ariaLabelledBy\", \"attr.aria-label\": \"_config.ariaLabel\", \"attr.aria-describedby\": \"_config.ariaDescribedBy || null\", \"class._mat-animation-noopable\": \"!_animationsEnabled\" }, classAttribute: \"mat-mdc-dialog-container mdc-dialog\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet></ng-template>\\n  </div>\\n</div>\\n\", styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{display:block;width:100%;height:100%}.mat-mdc-dialog-container{outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, var(--mdc-shape-medium, 4px))}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title,.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__actions,.mat-mdc-dialog-container.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer .mdc-dialog__actions{border-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title{border-bottom-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, \\\"Arial\\\");line-height:var(--mdc-dialog-subhead-line-height, 14px);font-size:var(--mdc-dialog-subhead-size, 14px);font-weight:var(--mdc-dialog-subhead-weight, 500);letter-spacing:var(--mdc-dialog-subhead-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, black)}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, \\\"Arial\\\");line-height:var(--mdc-dialog-supporting-text-line-height, 14px);font-size:var(--mdc-dialog-supporting-text-size, 14px);font-weight:var(--mdc-dialog-supporting-text-weight, 500);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, black)}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"], dependencies: [{ kind: \"directive\", type: i4.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-dialog-container', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'mat-mdc-dialog-container mdc-dialog',\n                        'tabindex': '-1',\n                        '[attr.aria-modal]': '_config.ariaModal',\n                        '[id]': '_config.id',\n                        '[attr.role]': '_config.role',\n                        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                        '[attr.aria-label]': '_config.ariaLabel',\n                        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                    }, template: \"<div class=\\\"mdc-dialog__container\\\">\\n  <div class=\\\"mat-mdc-dialog-surface mdc-dialog__surface\\\">\\n    <ng-template cdkPortalOutlet></ng-template>\\n  </div>\\n</div>\\n\", styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px),(max-width: 600px),(min-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\\\"\\\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid rgba(0,0,0,0);display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--fullscreen--titleless .mdc-dialog__close{margin-top:4px}.mdc-dialog--fullscreen--titleless.mdc-dialog--scrollable .mdc-dialog__close{margin-top:0}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid rgba(0,0,0,0)}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%;z-index:1}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}.mdc-dialog__scrim--removed{pointer-events:none}.mdc-dialog__scrim--removed .mdc-dialog__scrim,.mdc-dialog__scrim--removed .mdc-dialog__surface-scrim{display:none}.mat-mdc-dialog-content{max-height:65vh}.mat-mdc-dialog-container{position:static;display:block}.mat-mdc-dialog-container,.mat-mdc-dialog-container .mdc-dialog__container,.mat-mdc-dialog-container .mdc-dialog__surface{max-height:inherit;min-height:inherit;min-width:inherit;max-width:inherit}.mat-mdc-dialog-container .mdc-dialog__surface{display:block;width:100%;height:100%}.mat-mdc-dialog-container{outline:0}.mat-mdc-dialog-container .mdc-dialog__surface{background-color:var(--mdc-dialog-container-color, white)}.mat-mdc-dialog-container .mdc-dialog__surface{box-shadow:var(--mdc-dialog-container-elevation, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}.mat-mdc-dialog-container .mdc-dialog__surface{border-radius:var(--mdc-dialog-container-shape, var(--mdc-shape-medium, 4px))}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title,.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__actions,.mat-mdc-dialog-container.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer .mdc-dialog__actions{border-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container.mdc-dialog--scrollable .mdc-dialog__title{border-bottom-color:var(--mdc-dialog-with-divider-divider-color, black)}.mat-mdc-dialog-container .mdc-dialog__title{font-family:var(--mdc-dialog-subhead-font, \\\"Arial\\\");line-height:var(--mdc-dialog-subhead-line-height, 14px);font-size:var(--mdc-dialog-subhead-size, 14px);font-weight:var(--mdc-dialog-subhead-weight, 500);letter-spacing:var(--mdc-dialog-subhead-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__title{color:var(--mdc-dialog-subhead-color, black)}.mat-mdc-dialog-container .mdc-dialog__content{font-family:var(--mdc-dialog-supporting-text-font, \\\"Arial\\\");line-height:var(--mdc-dialog-supporting-text-line-height, 14px);font-size:var(--mdc-dialog-supporting-text-size, 14px);font-weight:var(--mdc-dialog-supporting-text-weight, 500);letter-spacing:var(--mdc-dialog-supporting-text-tracking, 1px)}.mat-mdc-dialog-container .mdc-dialog__content{color:var(--mdc-dialog-supporting-text-color, black)}.mat-mdc-dialog-container .mdc-dialog__container{transition-duration:var(--mat-dialog-transition-duration, 0ms)}.mat-mdc-dialog-container._mat-animation-noopable .mdc-dialog__container{transition:none}.mat-mdc-dialog-content{display:block}.mat-mdc-dialog-actions{justify-content:start}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-center,.mat-mdc-dialog-actions[align=center]{justify-content:center}.mat-mdc-dialog-actions.mat-mdc-dialog-actions-align-end,.mat-mdc-dialog-actions[align=end]{justify-content:flex-end}.mat-mdc-dialog-actions .mat-button-base+.mat-button-base,.mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-mdc-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-mdc-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatDialogConfig }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i1$1.OverlayRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: i1.FocusMonitor }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nclass MatDialogRef {\n    constructor(_ref, config, _containerInstance) {\n        this._ref = _ref;\n        this._containerInstance = _containerInstance;\n        /** Subject for notifying the user that the dialog has finished opening. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the dialog has started closing. */\n        this._beforeClosed = new Subject();\n        /** Current state of the dialog. */\n        this._state = 0 /* MatDialogState.OPEN */;\n        this.disableClose = config.disableClose;\n        this.id = _ref.id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'opened'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closed'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        });\n        _ref.overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._finishDialogClose();\n        });\n        merge(this.backdropClick(), this.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)))).subscribe(event => {\n            if (!this.disableClose) {\n                event.preventDefault();\n                _closeDialogVia(this, event.type === 'keydown' ? 'keyboard' : 'mouse');\n            }\n        });\n    }\n    /**\n     * Close the dialog.\n     * @param dialogResult Optional result to return to the dialog opener.\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged\n            .pipe(filter(event => event.state === 'closing'), take(1))\n            .subscribe(event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._ref.overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), event.totalTime + 100);\n        });\n        this._state = 1 /* MatDialogState.CLOSING */;\n        this._containerInstance._startExitAnimation();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed() {\n        return this._ref.closed;\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed() {\n        return this._beforeClosed;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._ref.backdropClick;\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._ref.keydownEvents;\n    }\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position) {\n        let strategy = this._ref.config.positionStrategy;\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        this._ref.updatePosition();\n        return this;\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSize(width = '', height = '') {\n        this._ref.updateSize(width, height);\n        return this;\n    }\n    /** Add a CSS class or an array of classes to the overlay pane. */\n    addPanelClass(classes) {\n        this._ref.addPanelClass(classes);\n        return this;\n    }\n    /** Remove a CSS class or an array of classes from the overlay pane. */\n    removePanelClass(classes) {\n        this._ref.removePanelClass(classes);\n        return this;\n    }\n    /** Gets the current state of the dialog's lifecycle. */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     */\n    _finishDialogClose() {\n        this._state = 2 /* MatDialogState.CLOSED */;\n        this._ref.close(this._result, { focusOrigin: this._closeInteractionType });\n        this.componentInstance = null;\n    }\n}\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nfunction _closeDialogVia(ref, interactionType, result) {\n    ref._closeInteractionType = interactionType;\n    return ref.close(result);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nconst MAT_DIALOG_DATA = new InjectionToken('MatMdcDialogData');\n/** Injection token that can be used to specify default dialog options. */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-mdc-dialog-default-options');\n/** Injection token that determines the scroll handling while the dialog is open. */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-mdc-dialog-scroll-strategy');\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n/** @docs-private */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** @docs-private */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.block();\n}\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\nclass _MatDialogBase {\n    /** Keeps track of the currently-open dialogs. */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /** Stream that emits when a dialog has been opened. */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    _getAfterAllClosed() {\n        const parent = this._parentDialog;\n        return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n    }\n    constructor(_overlay, injector, _defaultOptions, _parentDialog, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 15.0.0\n     */\n    _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _animationMode) {\n        this._overlay = _overlay;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._dialogRefConstructor = _dialogRefConstructor;\n        this._dialogContainerType = _dialogContainerType;\n        this._dialogDataToken = _dialogDataToken;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._idPrefix = 'mat-dialog-';\n        this.dialogConfigClass = MatDialogConfig;\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = defer(() => this.openDialogs.length\n            ? this._getAfterAllClosed()\n            : this._getAfterAllClosed().pipe(startWith(undefined)));\n        this._scrollStrategy = scrollStrategy;\n        this._dialog = injector.get(Dialog);\n    }\n    open(componentOrTemplateRef, config) {\n        let dialogRef;\n        config = { ...(this._defaultOptions || new MatDialogConfig()), ...config };\n        config.id = config.id || `${this._idPrefix}${uniqueId++}`;\n        config.scrollStrategy = config.scrollStrategy || this._scrollStrategy();\n        const cdkRef = this._dialog.open(componentOrTemplateRef, {\n            ...config,\n            positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n            // Disable closing since we need to sync it up to the animation ourselves.\n            disableClose: true,\n            // Disable closing on destroy, because this service cleans up its open dialogs as well.\n            // We want to do the cleanup here, rather than the CDK service, because the CDK destroys\n            // the dialogs immediately whereas we want it to wait for the animations to finish.\n            closeOnDestroy: false,\n            // Disable closing on detachments so that we can sync up the animation.\n            // The Material dialog ref handles this manually.\n            closeOnOverlayDetachments: false,\n            container: {\n                type: this._dialogContainerType,\n                providers: () => [\n                    // Provide our config as the CDK config as well since it has the same interface as the\n                    // CDK one, but it contains the actual values passed in by the user for things like\n                    // `disableClose` which we disable for the CDK dialog since we handle it ourselves.\n                    { provide: this.dialogConfigClass, useValue: config },\n                    { provide: DialogConfig, useValue: config },\n                ],\n            },\n            templateContext: () => ({ dialogRef }),\n            providers: (ref, cdkConfig, dialogContainer) => {\n                dialogRef = new this._dialogRefConstructor(ref, config, dialogContainer);\n                dialogRef.updatePosition(config?.position);\n                return [\n                    { provide: this._dialogContainerType, useValue: dialogContainer },\n                    { provide: this._dialogDataToken, useValue: cdkConfig.data },\n                    { provide: this._dialogRefConstructor, useValue: dialogRef },\n                ];\n            },\n        });\n        // This can't be assigned in the `providers` callback, because\n        // the instance hasn't been assigned to the CDK ref yet.\n        dialogRef.componentInstance = cdkRef.componentInstance;\n        this.openDialogs.push(dialogRef);\n        this.afterOpened.next(dialogRef);\n        dialogRef.afterClosed().subscribe(() => {\n            const index = this.openDialogs.indexOf(dialogRef);\n            if (index > -1) {\n                this.openDialogs.splice(index, 1);\n                if (!this.openDialogs.length) {\n                    this._getAfterAllClosed().next();\n                }\n            }\n        });\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param id ID to use when looking up the dialog.\n     */\n    getDialogById(id) {\n        return this.openDialogs.find(dialog => dialog.id === id);\n    }\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    _closeDialogs(dialogs) {\n        let i = dialogs.length;\n        while (i--) {\n            dialogs[i].close();\n        }\n    }\n}\n_MatDialogBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatDialogBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Injectable });\n_MatDialogBase.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatDialogBase });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatDialogBase, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: undefined }, { type: undefined }, { type: i1$1.OverlayContainer }, { type: undefined }, { type: i0.Type }, { type: i0.Type }, { type: i0.InjectionToken }, { type: undefined }]; } });\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog extends _MatDialogBase {\n    constructor(overlay, injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    location, defaultOptions, scrollStrategy, parentDialog, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 15.0.0\n     */\n    overlayContainer, \n    /**\n     * @deprecated No longer used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    animationMode) {\n        super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA, animationMode);\n        this._idPrefix = 'mat-mdc-dialog-';\n    }\n}\nMatDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialog, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: i2.Location, optional: true }, { token: MAT_DIALOG_DEFAULT_OPTIONS, optional: true }, { token: MAT_DIALOG_SCROLL_STRATEGY }, { token: MatDialog, optional: true, skipSelf: true }, { token: i1$1.OverlayContainer }, { token: ANIMATION_MODULE_TYPE$1, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMatDialog.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialog });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialog, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: i2.Location, decorators: [{\n                    type: Optional\n                }] }, { type: MatDialogConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DIALOG_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_DIALOG_SCROLL_STRATEGY]\n                }] }, { type: MatDialog, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1$1.OverlayContainer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE$1]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /** Default to \"button\" to prevents accidental form submits. */\n        this.type = 'button';\n    }\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n    }\n    ngOnChanges(changes) {\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n    _onButtonClick(event) {\n        // Determinate the focus origin using the click event, because using the FocusMonitor will\n        // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n        // dialog, and therefore clicking the button won't result in a focus change. This means that\n        // the FocusMonitor won't detect any origin change, and will always output `program`.\n        _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n    }\n}\nMatDialogClose.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogClose, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogClose.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatDialogClose, selector: \"[mat-dialog-close], [matDialogClose]\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, host: { listeners: { \"click\": \"_onButtonClick($event)\" }, properties: { \"attr.aria-label\": \"ariaLabel || null\", \"attr.type\": \"type\" } }, exportAs: [\"matDialogClose\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogClose, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-close], [matDialogClose]',\n                    exportAs: 'matDialogClose',\n                    host: {\n                        '(click)': '_onButtonClick($event)',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.type]': 'type',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }]; }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], type: [{\n                type: Input\n            }], dialogResult: [{\n                type: Input,\n                args: ['mat-dialog-close']\n            }], _matDialogClose: [{\n                type: Input,\n                args: ['matDialogClose']\n            }] } });\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    _dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-mdc-dialog-title-${dialogElementUid++}`;\n    }\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then(() => {\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            });\n        }\n    }\n}\nMatDialogTitle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogTitle, deps: [{ token: MatDialogRef, optional: true }, { token: i0.ElementRef }, { token: MatDialog }], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogTitle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatDialogTitle, selector: \"[mat-dialog-title], [matDialogTitle]\", inputs: { id: \"id\" }, host: { properties: { \"id\": \"id\" }, classAttribute: \"mat-mdc-dialog-title mdc-dialog__title\" }, exportAs: [\"matDialogTitle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-dialog-title], [matDialogTitle]',\n                    exportAs: 'matDialogTitle',\n                    host: {\n                        'class': 'mat-mdc-dialog-title mdc-dialog__title',\n                        '[id]': 'id',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDialogRef, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ElementRef }, { type: MatDialog }]; }, propDecorators: { id: [{\n                type: Input\n            }] } });\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatDialogContent, selector: \"[mat-dialog-content], mat-dialog-content, [matDialogContent]\", host: { classAttribute: \"mat-mdc-dialog-content mdc-dialog__content\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                    host: { 'class': 'mat-mdc-dialog-content mdc-dialog__content' },\n                }]\n        }] });\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n    constructor() {\n        /**\n         * Horizontal alignment of action buttons.\n         */\n        this.align = 'start';\n    }\n}\nMatDialogActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDialogActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatDialogActions, selector: \"[mat-dialog-actions], mat-dialog-actions, [matDialogActions]\", inputs: { align: \"align\" }, host: { properties: { \"class.mat-mdc-dialog-actions-align-center\": \"align === \\\"center\\\"\", \"class.mat-mdc-dialog-actions-align-end\": \"align === \\\"end\\\"\" }, classAttribute: \"mat-mdc-dialog-actions mdc-dialog__actions\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                    host: {\n                        'class': 'mat-mdc-dialog-actions mdc-dialog__actions',\n                        '[class.mat-mdc-dialog-actions-align-center]': 'align === \"center\"',\n                        '[class.mat-mdc-dialog-actions-align-end]': 'align === \"end\"',\n                    },\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }] } });\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element, openDialogs) {\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-mdc-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find(dialog => dialog.id === parent.id) : null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDialogModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogModule, declarations: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent], imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule], exports: [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule] });\nMatDialogModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogModule, providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER], imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatDialogModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [DialogModule, OverlayModule, PortalModule, MatCommonModule],\n                    exports: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogContent,\n                        MatDialogActions,\n                        MatCommonModule,\n                    ],\n                    declarations: [\n                        MatDialogContainer,\n                        MatDialogClose,\n                        MatDialogTitle,\n                        MatDialogActions,\n                        MatDialogContent,\n                    ],\n                    providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Default parameters for the animation for backwards compatibility.\n * @docs-private\n */\nconst _defaultParams = {\n    params: { enterAnimationDuration: '150ms', exitAnimationDuration: '75ms' },\n};\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nconst matDialogAnimations = {\n    /** Animation that is applied on the dialog container by default. */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', group([\n            animate('{{enterAnimationDuration}} cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n        transition('* => void, * => exit', group([\n            animate('{{exitAnimationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 })),\n            query('@*', animateChild(), { optional: true }),\n        ]), _defaultParams),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, _defaultParams, matDialogAnimations };\n"],"names":["CommonModule","MatButtonModule","MatIconModule","MatFormFieldModule","TranslateModule","MatSlideToggleModule","MatInputModule","BehaviorSubject","distinct","filter","map","Subject","takeUntil","DomainState","MatSelectModule","MAT_DIALOG_DATA","ReactiveFormsModule","Validators","ceilPfcc","multiplyPfcc","pfccFormGroupIsNotEmpty","sumPfccs","AddFoodFormState","AddFoodFormResetAction","AddFoodFormStatusChangedEvent","AddFoodFormValueChangedEvent","emptyPfcc","i0","AddFoodComponent","constructor","store","dialogRef","data","fb","idx","i","index","dispatch","allIngredients$","select","foods","usedIngredients$","ingredients","pipe","destroy$","ingredient","pfcc","weight","pfccs","subscribe","ceiledPfcc","next","id","usedIngredientsIds","usedIngredientsIds$","mapped","ingredientWeight","recalculatePfcc","formGroup","group","name","compose","required","description","isRecipe","type","isHidden","protein","min","fat","carbohydrates","calories","validators","array","valueChanges","formData","statusChanges","status","errors","ngOnDestroy","complete","ingredientsFormArray","get","pfccFormGroup","handleCloseClicked","close","handleAddIngredientClick","push","createIngredientFormGroup","nextIngredientIndex","handleSubmit","selectSnapshot","model","handleRecipeSwitcherChanged","checked","setValue","clear","value","ingredientsPfccs","accumulatedPfcc","handleRemoveIngredientClick","removeAt","selectors","standalone","features","decls","vars","consts","template","ctx","styles","changeDetection","combineLatestInit","operate","argsOrArgArray","mapOneOrManyArgs","popResultSelector","combineLatest","args","resultSelector","source","subscriber","combineLatestWith","otherSources","createOperatorSubscriber","noop","keySelector","flushes","distinctKeys","Set","key","has","add","isArray","Array","length","i1","A11yModule","i1$1","Overlay","OverlayConfig","OverlayRef","OverlayModule","_getFocusedElementPierceShadowDom","i3","BasePortalOutlet","CdkPortalOutlet","ComponentPortal","TemplatePortal","PortalModule","DOCUMENT","Component","ViewEncapsulation","ChangeDetectionStrategy","Optional","Inject","ViewChild","InjectionToken","Injector","TemplateRef","Injectable","SkipSelf","NgModule","ESCAPE","hasModifierKey","defer","of","Directionality","startWith","DialogConfig","role","panelClass","hasBackdrop","backdropClass","disableClose","width","height","ariaDescribedBy","ariaLabelledBy","ariaLabel","ariaModal","autoFocus","restoreFocus","closeOnNavigation","closeOnDestroy","closeOnOverlayDetachments","throwDialogContentAlreadyAttachedError","Error","CdkDialogContainer","_elementRef","_focusTrapFactory","_document","_config","_interactivityChecker","_ngZone","_overlayRef","_focusMonitor","_elementFocusedBeforeDialogWasOpened","_closeInteractionType","attachDomPortal","portal","_portalOutlet","hasAttached","ngDevMode","result","_contentAttached","_ariaLabelledBy","_initializeFocusTrap","_handleBackdropClicks","_captureInitialFocus","_trapFocus","_restoreFocus","attachComponentPortal","attachTemplatePortal","_recaptureFocus","_containsFocus","_forceFocus","element","options","isFocusable","tabIndex","runOutsideAngular","callback","removeEventListener","removeAttribute","addEventListener","focus","_focusByCssSelector","selector","elementToFocus","nativeElement","querySelector","_focusTrap","focusInitialElementWhenReady","then","focusedSuccessfully","_focusDialogContainer","focusConfig","focusTargetElement","activeElement","body","contains","focusVia","destroy","create","backdropClick","ɵfac","ElementRef","FocusTrapFactory","InteractivityChecker","NgZone","FocusMonitor","ɵcmp","encapsulation","None","Default","host","undefined","decorators","static","DialogRef","overlayRef","config","closed","keydownEvents","outsidePointerEvents","event","keyCode","preventDefault","focusOrigin","_detachSubscription","detachments","containerInstance","closedSubject","unsubscribe","dispose","componentInstance","updatePosition","updateSize","addPanelClass","classes","removePanelClass","DIALOG_SCROLL_STRATEGY","DIALOG_DATA","DEFAULT_DIALOG_CONFIG","DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","block","DIALOG_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","uniqueId","Dialog","openDialogs","_parentDialog","_openDialogsAtThisLevel","afterOpened","_afterOpenedAtThisLevel","_overlay","_injector","_defaultOptions","_overlayContainer","scrollStrategy","_afterAllClosedAtThisLevel","_ariaHiddenElements","Map","afterAllClosed","_getAfterAllClosed","_scrollStrategy","open","componentOrTemplateRef","defaults","getDialogById","overlayConfig","_getOverlayConfig","dialogContainer","_attachContainer","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","_removeOpenDialog","closeAll","reverseForEach","dialog","find","state","positionStrategy","position","global","centerHorizontally","centerVertically","direction","minWidth","minHeight","maxWidth","maxHeight","disposeOnNavigation","userInjector","injector","viewContainerRef","providers","useValue","containerType","container","containerPortal","parent","componentFactoryResolver","containerRef","attach","instance","_createInjector","context","$implicit","templateContext","contentRef","fallbackInjector","optional","change","emitEvent","indexOf","splice","forEach","previousValue","setAttribute","overlayContainer","getContainerElement","parentElement","siblings","children","sibling","nodeName","hasAttribute","set","getAttribute","OverlayContainer","ɵprov","items","DialogModule","ɵmod","ɵinj","imports","exports","declarations","i2","EventEmitter","ANIMATION_MODULE_TYPE","ANIMATION_MODULE_TYPE$1","Directive","Input","coerceNumberProperty","i4","merge","take","MatCommonModule","trigger","style","transition","animate","query","animateChild","MatDialogConfig","delayFocusTrap","OPEN_CLASS","OPENING_CLASS","CLOSING_CLASS","OPEN_ANIMATION_DURATION","CLOSE_ANIMATION_DURATION","_MatDialogContainerBase","elementRef","focusTrapFactory","dialogConfig","interactivityChecker","ngZone","focusMonitor","_animationStateChanged","_openAnimationDone","totalTime","TRANSITION_DURATION_PROPERTY","parseCssTime","time","endsWith","substring","MatDialogContainer","document","checker","_animationMode","_animationsEnabled","_hostElement","_openAnimationDuration","enterAnimationDuration","_closeAnimationDuration","exitAnimationDuration","_animationTimer","_finishDialogOpen","_clearAnimationClasses","_finishDialogClose","emit","_startOpenAnimation","clearTimeout","setProperty","classList","_waitForAnimationToComplete","Promise","resolve","_startExitAnimation","remove","duration","setTimeout","MatDialogRef","_ref","_containerInstance","_afterOpened","_beforeClosed","_state","_closeFallbackTimeout","_result","_closeDialogVia","dialogResult","detachBackdrop","afterClosed","beforeClosed","strategy","left","right","top","bottom","getState","ref","interactionType","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","_MatDialogBase","_dialogRefConstructor","_dialogContainerType","_dialogDataToken","_idPrefix","dialogConfigClass","_dialog","cdkRef","cdkConfig","_closeDialogs","dialogs","Type","MatDialog","location","defaultOptions","parentDialog","animationMode","Location","dialogElementUid","MatDialogClose","ngOnInit","getClosestDialog","ngOnChanges","changes","proxiedChange","currentValue","_onButtonClick","screenX","screenY","ɵdir","exportAs","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogContent","MatDialogActions","align","MatDialogModule","_defaultParams","params","matDialogAnimations","opacity","transform"],"sourceRoot":"webpack:///","x_google_ignoreList":[2,3,4,5,6,7]}